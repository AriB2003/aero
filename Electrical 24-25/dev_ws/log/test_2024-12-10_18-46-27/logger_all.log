[0.130s] DEBUG:colcon:Command line arguments: ['/usr/bin/colcon', 'test']
[0.131s] DEBUG:colcon:Parsed command line arguments: Namespace(log_base=None, log_level=None, verb_name='test', build_base='build', install_base='install', merge_install=False, test_result_base=None, retest_until_fail=0, retest_until_pass=0, abort_on_error=False, return_code_on_test_failure=False, executor='parallel', parallel_workers=22, event_handlers=None, ignore_user_meta=False, metas=['./colcon.meta'], base_paths=['.'], packages_ignore=None, packages_ignore_regex=None, paths=None, packages_up_to=None, packages_up_to_regex=None, packages_above=None, packages_above_and_dependencies=None, packages_above_depth=None, packages_select_by_dep=None, packages_skip_by_dep=None, packages_skip_up_to=None, packages_select_build_failed=False, packages_skip_build_finished=False, packages_select_test_failures=False, packages_skip_test_passed=False, packages_select=None, packages_skip=None, packages_select_regex=None, packages_skip_regex=None, packages_start=None, packages_end=None, allow_overriding=[], ctest_args=None, python_testing=None, pytest_args=None, pytest_with_coverage=False, unittest_args=None, mixin_files=None, mixin=None, verb_parser=<colcon_mixin.mixin.mixin_argument.MixinArgumentDecorator object at 0x74bf58f43e20>, verb_extension=<colcon_core.verb.test.TestVerb object at 0x74bf590be9e0>, main=<bound method TestVerb.main of <colcon_core.verb.test.TestVerb object at 0x74bf590be9e0>>, mixin_verb=('test',))
[0.150s] Level 1:colcon.colcon_core.package_discovery:discover_packages(colcon_meta) check parameters
[0.150s] Level 1:colcon.colcon_core.package_discovery:discover_packages(recursive) check parameters
[0.150s] Level 1:colcon.colcon_core.package_discovery:discover_packages(ignore) check parameters
[0.150s] Level 1:colcon.colcon_core.package_discovery:discover_packages(path) check parameters
[0.150s] Level 1:colcon.colcon_core.package_discovery:discover_packages(colcon_meta) discover
[0.150s] Level 1:colcon.colcon_core.package_discovery:discover_packages(recursive) discover
[0.150s] INFO:colcon.colcon_core.package_discovery:Crawling recursively for packages in '/home/zaraius/Documents/test/aero/Electrical 24-25/dev_ws'
[0.150s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extensions ['ignore', 'ignore_ament_install']
[0.150s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extension 'ignore'
[0.150s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extension 'ignore_ament_install'
[0.150s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extensions ['colcon_pkg']
[0.150s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extension 'colcon_pkg'
[0.150s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extensions ['colcon_meta']
[0.150s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extension 'colcon_meta'
[0.150s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extensions ['ros']
[0.150s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extension 'ros'
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extensions ['cmake', 'python']
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extension 'cmake'
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extension 'python'
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extensions ['python_setup_py']
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(.) by extension 'python_setup_py'
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(build) by extensions ['ignore', 'ignore_ament_install']
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(build) by extension 'ignore'
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(build) ignored
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(install) by extensions ['ignore', 'ignore_ament_install']
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(install) by extension 'ignore'
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(install) ignored
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(log) by extensions ['ignore', 'ignore_ament_install']
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(log) by extension 'ignore'
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(log) ignored
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(src) by extensions ['ignore', 'ignore_ament_install']
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(src) by extension 'ignore'
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(src) by extension 'ignore_ament_install'
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(src) by extensions ['colcon_pkg']
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(src) by extension 'colcon_pkg'
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(src) by extensions ['colcon_meta']
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(src) by extension 'colcon_meta'
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(src) by extensions ['ros']
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(src) by extension 'ros'
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(src) by extensions ['cmake', 'python']
[0.168s] Level 1:colcon.colcon_core.package_identification:_identify(src) by extension 'cmake'
[0.169s] Level 1:colcon.colcon_core.package_identification:_identify(src) by extension 'python'
[0.169s] Level 1:colcon.colcon_core.package_identification:_identify(src) by extensions ['python_setup_py']
[0.169s] Level 1:colcon.colcon_core.package_identification:_identify(src) by extension 'python_setup_py'
[0.169s] Level 1:colcon.colcon_core.package_identification:_identify(src/my_package) by extensions ['ignore', 'ignore_ament_install']
[0.169s] Level 1:colcon.colcon_core.package_identification:_identify(src/my_package) by extension 'ignore'
[0.169s] Level 1:colcon.colcon_core.package_identification:_identify(src/my_package) by extension 'ignore_ament_install'
[0.169s] Level 1:colcon.colcon_core.package_identification:_identify(src/my_package) by extensions ['colcon_pkg']
[0.169s] Level 1:colcon.colcon_core.package_identification:_identify(src/my_package) by extension 'colcon_pkg'
[0.169s] Level 1:colcon.colcon_core.package_identification:_identify(src/my_package) by extensions ['colcon_meta']
[0.169s] Level 1:colcon.colcon_core.package_identification:_identify(src/my_package) by extension 'colcon_meta'
[0.169s] Level 1:colcon.colcon_core.package_identification:_identify(src/my_package) by extensions ['ros']
[0.169s] Level 1:colcon.colcon_core.package_identification:_identify(src/my_package) by extension 'ros'
[0.170s] DEBUG:colcon.colcon_core.package_identification:Package 'src/my_package' with type 'ros.ament_python' and name 'my_package'
[0.170s] Level 1:colcon.colcon_core.package_discovery:discover_packages(recursive) using defaults
[0.170s] Level 1:colcon.colcon_core.package_discovery:discover_packages(ignore) discover
[0.170s] Level 1:colcon.colcon_core.package_discovery:discover_packages(ignore) using defaults
[0.170s] Level 1:colcon.colcon_core.package_discovery:discover_packages(path) discover
[0.170s] Level 1:colcon.colcon_core.package_discovery:discover_packages(path) using defaults
[0.171s] Level 5:colcon.colcon_core.verb:set package 'my_package' test argument 'ctest_args' from command line to 'None'
[0.171s] Level 5:colcon.colcon_core.verb:set package 'my_package' test argument 'python_testing' from command line to 'None'
[0.171s] Level 5:colcon.colcon_core.verb:set package 'my_package' test argument 'pytest_args' from command line to 'None'
[0.171s] Level 5:colcon.colcon_core.verb:set package 'my_package' test argument 'pytest_with_coverage' from command line to 'False'
[0.171s] Level 5:colcon.colcon_core.verb:set package 'my_package' test argument 'unittest_args' from command line to 'None'
[0.171s] Level 5:colcon.colcon_core.verb:set package 'my_package' test argument 'retest_until_pass' from command line to '0'
[0.171s] Level 5:colcon.colcon_core.verb:set package 'my_package' test argument 'retest_until_fail' from command line to '0'
[0.171s] DEBUG:colcon.colcon_core.verb.test:Testing package 'my_package' with the following arguments: {'build_base': '/home/zaraius/Documents/test/aero/Electrical 24-25/dev_ws/build/my_package', 'ctest_args': None, 'install_base': '/home/zaraius/Documents/test/aero/Electrical 24-25/dev_ws/install/my_package', 'path': '/home/zaraius/Documents/test/aero/Electrical 24-25/dev_ws/src/my_package', 'pytest_args': None, 'pytest_with_coverage': False, 'python_testing': None, 'retest_until_fail': 0, 'retest_until_pass': 0, 'test_result_base': None, 'unittest_args': None}
[0.171s] INFO:colcon.colcon_core.executor:Executing jobs using 'parallel' executor
[0.173s] DEBUG:colcon.colcon_parallel_executor.executor.parallel:run_until_complete
[0.173s] INFO:colcon.colcon_ros.task.ament_python.test:Testing ROS package in '/home/zaraius/Documents/test/aero/Electrical 24-25/dev_ws/src/my_package' with build type'ament_python'
[0.173s] INFO:colcon.colcon_core.task.python.test:Testing Python package in '/home/zaraius/Documents/test/aero/Electrical 24-25/dev_ws/src/my_package'
[0.175s] INFO:colcon.colcon_core.plugin_system:Skipping extension 'colcon_core.shell.bat': Not used on non-Windows systems
[0.175s] INFO:colcon.colcon_core.shell:Skip shell extension 'powershell' for command environment: Not usable outside of PowerShell
[0.175s] DEBUG:colcon.colcon_core.shell:Skip shell extension 'dsv' for command environment
[0.277s] DEBUG:colcon.colcon_parallel_executor.executor.parallel:closing loop
[0.277s] DEBUG:colcon.colcon_parallel_executor.executor.parallel:loop closed
[0.277s] DEBUG:colcon.colcon_parallel_executor.executor.parallel:run_until_complete finished with 'Command '['/usr/bin/python3', '-c', 'import sys;from contextlib import suppress;exec("with suppress(ImportError):    from setuptools.extern.packaging.specifiers    import SpecifierSet");exec("with suppress(ImportError):    from packaging.specifiers import SpecifierSet");from distutils.core import run_setup;dist = run_setup(    \'setup.py\', script_args=(\'--dry-run\',), stop_after=\'config\');skip_keys = (\'cmdclass\', \'distclass\', \'ext_modules\', \'metadata\');data = {    key: value for key, value in dist.__dict__.items()     if (        not key.startswith(\'_\') and         not callable(value) and         key not in skip_keys and         key not in dist.display_option_names    )};data[\'metadata\'] = {    k: v for k, v in dist.metadata.__dict__.items()     if k not in (\'license_files\', \'provides_extras\')};sys.stdout.buffer.write(repr(data).encode(\'utf-8\'))']' returned non-zero exit status 1.'
[0.277s] DEBUG:colcon.colcon_core.event_reactor:joining thread
[0.281s] INFO:colcon.colcon_core.plugin_system:Skipping extension 'colcon_notification.desktop_notification.terminal_notifier': Not used on non-Darwin systems
[0.281s] INFO:colcon.colcon_core.plugin_system:Skipping extension 'colcon_notification.desktop_notification.win32': Not used on non-Windows systems
[0.281s] INFO:colcon.colcon_notification.desktop_notification:Sending desktop notification using 'notify2'
[0.292s] DEBUG:colcon.colcon_core.event_reactor:joined thread
